//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

import { TenantManagementLicensePM } from './TenantManagementLicensePM';

import { TenantAddOnPM } from './TenantAddOnPM';
//
import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class TenantManagementPM {
	//
	//
	//   constructor() {
	//
	//       this.IsDirty = false;
	//   }

	private id: number;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: number) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private name: string;
	public get Name() {
		return this.name;
	}
	public set Name(newValue: string) {
		if (this.name != newValue) {
			this.name = newValue;
			this.MarkAsDirty('Name');
		}
	}

	private lastLoginDateTime: Date;
	public get LastLoginDateTime() {
		return this.lastLoginDateTime;
	}
	public set LastLoginDateTime(newValue: Date) {
		if (this.lastLoginDateTime != newValue) {
			this.lastLoginDateTime = newValue;
			this.MarkAsDirty('LastLoginDateTime');
		}
	}

	private packageCode: string;
	public get PackageCode() {
		return this.packageCode;
	}
	public set PackageCode(newValue: string) {
		if (this.packageCode != newValue) {
			this.packageCode = newValue;
			this.MarkAsDirty('PackageCode');
		}
	}

	private packageName: string;
	public get PackageName() {
		return this.packageName;
	}
	public set PackageName(newValue: string) {
		if (this.packageName != newValue) {
			this.packageName = newValue;
			this.MarkAsDirty('PackageName');
		}
	}

	private trialStartDate: Date;
	public get TrialStartDate() {
		return this.trialStartDate;
	}
	public set TrialStartDate(newValue: Date) {
		if (this.trialStartDate != newValue) {
			this.trialStartDate = newValue;
			this.MarkAsDirty('TrialStartDate');
		}
	}

	private trialEndDate: Date;
	public get TrialEndDate() {
		return this.trialEndDate;
	}
	public set TrialEndDate(newValue: Date) {
		if (this.trialEndDate != newValue) {
			this.trialEndDate = newValue;
			this.MarkAsDirty('TrialEndDate');
		}
	}

	private firstPaymentDate: Date;
	public get FirstPaymentDate() {
		return this.firstPaymentDate;
	}
	public set FirstPaymentDate(newValue: Date) {
		if (this.firstPaymentDate != newValue) {
			this.firstPaymentDate = newValue;
			this.MarkAsDirty('FirstPaymentDate');
		}
	}

	private paidUntilDate: Date;
	public get PaidUntilDate() {
		return this.paidUntilDate;
	}
	public set PaidUntilDate(newValue: Date) {
		if (this.paidUntilDate != newValue) {
			this.paidUntilDate = newValue;
			this.MarkAsDirty('PaidUntilDate');
		}
	}

	private searchFields: string;
	public get SearchFields() {
		return this.searchFields;
	}
	public set SearchFields(newValue: string) {
		if (this.searchFields != newValue) {
			this.searchFields = newValue;
			this.MarkAsDirty('SearchFields');
		}
	}

	private isAWBStockPrepaid: boolean;
	public get IsAWBStockPrepaid() {
		return this.isAWBStockPrepaid;
	}
	public set IsAWBStockPrepaid(newValue: boolean) {
		if (this.isAWBStockPrepaid != newValue) {
			this.isAWBStockPrepaid = newValue;
			this.MarkAsDirty('IsAWBStockPrepaid');
		}
	}

	private isActive: boolean;
	public get IsActive() {
		return this.isActive;
	}
	public set IsActive(newValue: boolean) {
		if (this.isActive != newValue) {
			this.isActive = newValue;
			this.MarkAsDirty('IsActive');
		}
	}

	private timeZone: string;
	public get TimeZone() {
		return this.timeZone;
	}
	public set TimeZone(newValue: string) {
		if (this.timeZone != newValue) {
			this.timeZone = newValue;
			this.MarkAsDirty('TimeZone');
		}
	}

	private globalDBId: string;
	public get GlobalDBId() {
		return this.globalDBId;
	}
	public set GlobalDBId(newValue: string) {
		if (this.globalDBId != newValue) {
			this.globalDBId = newValue;
			this.MarkAsDirty('GlobalDBId');
		}
	}

	private tTY: string;
	public get TTY() {
		return this.tTY;
	}
	public set TTY(newValue: string) {
		if (this.tTY != newValue) {
			this.tTY = newValue;
			this.MarkAsDirty('TTY');
		}
	}

	private freeUsers: number;
	public get FreeUsers() {
		return this.freeUsers;
	}
	public set FreeUsers(newValue: number) {
		if (this.freeUsers != newValue) {
			this.freeUsers = newValue;
			this.MarkAsDirty('FreeUsers');
		}
	}

	private isRecurring: boolean;
	public get IsRecurring() {
		return this.isRecurring;
	}
	public set IsRecurring(newValue: boolean) {
		if (this.isRecurring != newValue) {
			this.isRecurring = newValue;
			this.MarkAsDirty('IsRecurring');
		}
	}

	private recurringPeriodCode: string;
	public get RecurringPeriodCode() {
		return this.recurringPeriodCode;
	}
	public set RecurringPeriodCode(newValue: string) {
		if (this.recurringPeriodCode != newValue) {
			this.recurringPeriodCode = newValue;
			this.MarkAsDirty('RecurringPeriodCode');
		}
	}

	private createDate: Date;
	public get CreateDate() {
		return this.createDate;
	}
	public set CreateDate(newValue: Date) {
		if (this.createDate != newValue) {
			this.createDate = newValue;
			this.MarkAsDirty('CreateDate');
		}
	}

	private updateDate: Date;
	public get UpdateDate() {
		return this.updateDate;
	}
	public set UpdateDate(newValue: Date) {
		if (this.updateDate != newValue) {
			this.updateDate = newValue;
			this.MarkAsDirty('UpdateDate');
		}
	}

	private paymentFailure: boolean;
	public get PaymentFailure() {
		return this.paymentFailure;
	}
	public set PaymentFailure(newValue: boolean) {
		if (this.paymentFailure != newValue) {
			this.paymentFailure = newValue;
			this.MarkAsDirty('PaymentFailure');
		}
	}

	private suspendDate: Date;
	public get SuspendDate() {
		return this.suspendDate;
	}
	public set SuspendDate(newValue: Date) {
		if (this.suspendDate != newValue) {
			this.suspendDate = newValue;
			this.MarkAsDirty('SuspendDate');
		}
	}

	private internalNotes: string;
	public get InternalNotes() {
		return this.internalNotes;
	}
	public set InternalNotes(newValue: string) {
		if (this.internalNotes != newValue) {
			this.internalNotes = newValue;
			this.MarkAsDirty('InternalNotes');
		}
	}

	private bluesnapAccount: string;
	public get BluesnapAccount() {
		return this.bluesnapAccount;
	}
	public set BluesnapAccount(newValue: string) {
		if (this.bluesnapAccount != newValue) {
			this.bluesnapAccount = newValue;
			this.MarkAsDirty('BluesnapAccount');
		}
	}

	private mainContract: string;
	public get MainContract() {
		return this.mainContract;
	}
	public set MainContract(newValue: string) {
		if (this.mainContract != newValue) {
			this.mainContract = newValue;
			this.MarkAsDirty('MainContract');
		}
	}

	private temporalPackageCode: string;
	public get TemporalPackageCode() {
		return this.temporalPackageCode;
	}
	public set TemporalPackageCode(newValue: string) {
		if (this.temporalPackageCode != newValue) {
			this.temporalPackageCode = newValue;
			this.MarkAsDirty('TemporalPackageCode');
		}
	}

	private temporalPackageName: string;
	public get TemporalPackageName() {
		return this.temporalPackageName;
	}
	public set TemporalPackageName(newValue: string) {
		if (this.temporalPackageName != newValue) {
			this.temporalPackageName = newValue;
			this.MarkAsDirty('TemporalPackageName');
		}
	}

	private temporalStartDate: Date;
	public get TemporalStartDate() {
		return this.temporalStartDate;
	}
	public set TemporalStartDate(newValue: Date) {
		if (this.temporalStartDate != newValue) {
			this.temporalStartDate = newValue;
			this.MarkAsDirty('TemporalStartDate');
		}
	}

	private temporalEndDate: Date;
	public get TemporalEndDate() {
		return this.temporalEndDate;
	}
	public set TemporalEndDate(newValue: Date) {
		if (this.temporalEndDate != newValue) {
			this.temporalEndDate = newValue;
			this.MarkAsDirty('TemporalEndDate');
		}
	}

	private paymentMethodCode: string;
	public get PaymentMethodCode() {
		return this.paymentMethodCode;
	}
	public set PaymentMethodCode(newValue: string) {
		if (this.paymentMethodCode != newValue) {
			this.paymentMethodCode = newValue;
			this.MarkAsDirty('PaymentMethodCode');
		}
	}

	private paymentChannelCode: string;
	public get PaymentChannelCode() {
		return this.paymentChannelCode;
	}
	public set PaymentChannelCode(newValue: string) {
		if (this.paymentChannelCode != newValue) {
			this.paymentChannelCode = newValue;
			this.MarkAsDirty('PaymentChannelCode');
		}
	}

	private licensePrice: number;
	public get LicensePrice() {
		return this.licensePrice;
	}
	public set LicensePrice(newValue: number) {
		if (this.licensePrice != newValue) {
			this.licensePrice = newValue;
			this.MarkAsDirty('LicensePrice');
		}
	}

	private notes: string;
	public get Notes() {
		return this.notes;
	}
	public set Notes(newValue: string) {
		if (this.notes != newValue) {
			this.notes = newValue;
			this.MarkAsDirty('Notes');
		}
	}

	private countryName: string;
	public get CountryName() {
		return this.countryName;
	}
	public set CountryName(newValue: string) {
		if (this.countryName != newValue) {
			this.countryName = newValue;
			this.MarkAsDirty('CountryName');
		}
	}

	private lastFWBSentDate: Date;
	public get LastFWBSentDate() {
		return this.lastFWBSentDate;
	}
	public set LastFWBSentDate(newValue: Date) {
		if (this.lastFWBSentDate != newValue) {
			this.lastFWBSentDate = newValue;
			this.MarkAsDirty('LastFWBSentDate');
		}
	}

	private lastFHLSentDate: Date;
	public get LastFHLSentDate() {
		return this.lastFHLSentDate;
	}
	public set LastFHLSentDate(newValue: Date) {
		if (this.lastFHLSentDate != newValue) {
			this.lastFHLSentDate = newValue;
			this.MarkAsDirty('LastFHLSentDate');
		}
	}

	private statisticsUpdateDate: Date;
	public get StatisticsUpdateDate() {
		return this.statisticsUpdateDate;
	}
	public set StatisticsUpdateDate(newValue: Date) {
		if (this.statisticsUpdateDate != newValue) {
			this.statisticsUpdateDate = newValue;
			this.MarkAsDirty('StatisticsUpdateDate');
		}
	}

	private shipmentLastDate: Date;
	public get ShipmentLastDate() {
		return this.shipmentLastDate;
	}
	public set ShipmentLastDate(newValue: Date) {
		if (this.shipmentLastDate != newValue) {
			this.shipmentLastDate = newValue;
			this.MarkAsDirty('ShipmentLastDate');
		}
	}

	private shipmentTotalLastWeek: number;
	public get ShipmentTotalLastWeek() {
		return this.shipmentTotalLastWeek;
	}
	public set ShipmentTotalLastWeek(newValue: number) {
		if (this.shipmentTotalLastWeek != newValue) {
			this.shipmentTotalLastWeek = newValue;
			this.MarkAsDirty('ShipmentTotalLastWeek');
		}
	}

	private shipmentTotalLastMonth: number;
	public get ShipmentTotalLastMonth() {
		return this.shipmentTotalLastMonth;
	}
	public set ShipmentTotalLastMonth(newValue: number) {
		if (this.shipmentTotalLastMonth != newValue) {
			this.shipmentTotalLastMonth = newValue;
			this.MarkAsDirty('ShipmentTotalLastMonth');
		}
	}

	private quoteLastDate: Date;
	public get QuoteLastDate() {
		return this.quoteLastDate;
	}
	public set QuoteLastDate(newValue: Date) {
		if (this.quoteLastDate != newValue) {
			this.quoteLastDate = newValue;
			this.MarkAsDirty('QuoteLastDate');
		}
	}

	private quoteTotalLastWeek: number;
	public get QuoteTotalLastWeek() {
		return this.quoteTotalLastWeek;
	}
	public set QuoteTotalLastWeek(newValue: number) {
		if (this.quoteTotalLastWeek != newValue) {
			this.quoteTotalLastWeek = newValue;
			this.MarkAsDirty('QuoteTotalLastWeek');
		}
	}

	private quoteTotalLastMonth: number;
	public get QuoteTotalLastMonth() {
		return this.quoteTotalLastMonth;
	}
	public set QuoteTotalLastMonth(newValue: number) {
		if (this.quoteTotalLastMonth != newValue) {
			this.quoteTotalLastMonth = newValue;
			this.MarkAsDirty('QuoteTotalLastMonth');
		}
	}

	private aRInvoiceLastDate: Date;
	public get ARInvoiceLastDate() {
		return this.aRInvoiceLastDate;
	}
	public set ARInvoiceLastDate(newValue: Date) {
		if (this.aRInvoiceLastDate != newValue) {
			this.aRInvoiceLastDate = newValue;
			this.MarkAsDirty('ARInvoiceLastDate');
		}
	}

	private aRInvoiceTotalLastWeek: number;
	public get ARInvoiceTotalLastWeek() {
		return this.aRInvoiceTotalLastWeek;
	}
	public set ARInvoiceTotalLastWeek(newValue: number) {
		if (this.aRInvoiceTotalLastWeek != newValue) {
			this.aRInvoiceTotalLastWeek = newValue;
			this.MarkAsDirty('ARInvoiceTotalLastWeek');
		}
	}

	private aRInvoiceTotalLastMonth: number;
	public get ARInvoiceTotalLastMonth() {
		return this.aRInvoiceTotalLastMonth;
	}
	public set ARInvoiceTotalLastMonth(newValue: number) {
		if (this.aRInvoiceTotalLastMonth != newValue) {
			this.aRInvoiceTotalLastMonth = newValue;
			this.MarkAsDirty('ARInvoiceTotalLastMonth');
		}
	}

	private aPInvoiceLastDate: Date;
	public get APInvoiceLastDate() {
		return this.aPInvoiceLastDate;
	}
	public set APInvoiceLastDate(newValue: Date) {
		if (this.aPInvoiceLastDate != newValue) {
			this.aPInvoiceLastDate = newValue;
			this.MarkAsDirty('APInvoiceLastDate');
		}
	}

	private aPInvoiceTotalLastWeek: number;
	public get APInvoiceTotalLastWeek() {
		return this.aPInvoiceTotalLastWeek;
	}
	public set APInvoiceTotalLastWeek(newValue: number) {
		if (this.aPInvoiceTotalLastWeek != newValue) {
			this.aPInvoiceTotalLastWeek = newValue;
			this.MarkAsDirty('APInvoiceTotalLastWeek');
		}
	}

	private aPInvoiceTotalLastMonth: number;
	public get APInvoiceTotalLastMonth() {
		return this.aPInvoiceTotalLastMonth;
	}
	public set APInvoiceTotalLastMonth(newValue: number) {
		if (this.aPInvoiceTotalLastMonth != newValue) {
			this.aPInvoiceTotalLastMonth = newValue;
			this.MarkAsDirty('APInvoiceTotalLastMonth');
		}
	}

	private customerLastDate: Date;
	public get CustomerLastDate() {
		return this.customerLastDate;
	}
	public set CustomerLastDate(newValue: Date) {
		if (this.customerLastDate != newValue) {
			this.customerLastDate = newValue;
			this.MarkAsDirty('CustomerLastDate');
		}
	}

	private customerTotalLastWeek: number;
	public get CustomerTotalLastWeek() {
		return this.customerTotalLastWeek;
	}
	public set CustomerTotalLastWeek(newValue: number) {
		if (this.customerTotalLastWeek != newValue) {
			this.customerTotalLastWeek = newValue;
			this.MarkAsDirty('CustomerTotalLastWeek');
		}
	}

	private customerTotalLastMonth: number;
	public get CustomerTotalLastMonth() {
		return this.customerTotalLastMonth;
	}
	public set CustomerTotalLastMonth(newValue: number) {
		if (this.customerTotalLastMonth != newValue) {
			this.customerTotalLastMonth = newValue;
			this.MarkAsDirty('CustomerTotalLastMonth');
		}
	}

	private mobileLastDate: Date;
	public get MobileLastDate() {
		return this.mobileLastDate;
	}
	public set MobileLastDate(newValue: Date) {
		if (this.mobileLastDate != newValue) {
			this.mobileLastDate = newValue;
			this.MarkAsDirty('MobileLastDate');
		}
	}

	private mobileTotalLastWeek: number;
	public get MobileTotalLastWeek() {
		return this.mobileTotalLastWeek;
	}
	public set MobileTotalLastWeek(newValue: number) {
		if (this.mobileTotalLastWeek != newValue) {
			this.mobileTotalLastWeek = newValue;
			this.MarkAsDirty('MobileTotalLastWeek');
		}
	}

	private mobileTotalLastMonth: number;
	public get MobileTotalLastMonth() {
		return this.mobileTotalLastMonth;
	}
	public set MobileTotalLastMonth(newValue: number) {
		if (this.mobileTotalLastMonth != newValue) {
			this.mobileTotalLastMonth = newValue;
			this.MarkAsDirty('MobileTotalLastMonth');
		}
	}

	private shardLogisticLastDate: Date;
	public get ShardLogisticLastDate() {
		return this.shardLogisticLastDate;
	}
	public set ShardLogisticLastDate(newValue: Date) {
		if (this.shardLogisticLastDate != newValue) {
			this.shardLogisticLastDate = newValue;
			this.MarkAsDirty('ShardLogisticLastDate');
		}
	}

	private shardLogisticTotalLastWeek: number;
	public get ShardLogisticTotalLastWeek() {
		return this.shardLogisticTotalLastWeek;
	}
	public set ShardLogisticTotalLastWeek(newValue: number) {
		if (this.shardLogisticTotalLastWeek != newValue) {
			this.shardLogisticTotalLastWeek = newValue;
			this.MarkAsDirty('ShardLogisticTotalLastWeek');
		}
	}

	private shardLogisticTotalLastMonth: number;
	public get ShardLogisticTotalLastMonth() {
		return this.shardLogisticTotalLastMonth;
	}
	public set ShardLogisticTotalLastMonth(newValue: number) {
		if (this.shardLogisticTotalLastMonth != newValue) {
			this.shardLogisticTotalLastMonth = newValue;
			this.MarkAsDirty('ShardLogisticTotalLastMonth');
		}
	}

	private paymentCurrencyCode: string;
	public get PaymentCurrencyCode() {
		return this.paymentCurrencyCode;
	}
	public set PaymentCurrencyCode(newValue: string) {
		if (this.paymentCurrencyCode != newValue) {
			this.paymentCurrencyCode = newValue;
			this.MarkAsDirty('PaymentCurrencyCode');
		}
	}

	private distributorCode: string;
	public get DistributorCode() {
		return this.distributorCode;
	}
	public set DistributorCode(newValue: string) {
		if (this.distributorCode != newValue) {
			this.distributorCode = newValue;
			this.MarkAsDirty('DistributorCode');
		}
	}

	private bluesnapContractId: string;
	public get BluesnapContractId() {
		return this.bluesnapContractId;
	}
	public set BluesnapContractId(newValue: string) {
		if (this.bluesnapContractId != newValue) {
			this.bluesnapContractId = newValue;
			this.MarkAsDirty('BluesnapContractId');
		}
	}

	private bluesnapCRMContractId: string;
	public get BluesnapCRMContractId() {
		return this.bluesnapCRMContractId;
	}
	public set BluesnapCRMContractId(newValue: string) {
		if (this.bluesnapCRMContractId != newValue) {
			this.bluesnapCRMContractId = newValue;
			this.MarkAsDirty('BluesnapCRMContractId');
		}
	}

	private bluesnapEAWBContractId: string;
	public get BluesnapEAWBContractId() {
		return this.bluesnapEAWBContractId;
	}
	public set BluesnapEAWBContractId(newValue: string) {
		if (this.bluesnapEAWBContractId != newValue) {
			this.bluesnapEAWBContractId = newValue;
			this.MarkAsDirty('BluesnapEAWBContractId');
		}
	}

	private bluesnapEAWBSContractId: string;
	public get BluesnapEAWBSContractId() {
		return this.bluesnapEAWBSContractId;
	}
	public set BluesnapEAWBSContractId(newValue: string) {
		if (this.bluesnapEAWBSContractId != newValue) {
			this.bluesnapEAWBSContractId = newValue;
			this.MarkAsDirty('BluesnapEAWBSContractId');
		}
	}

	private bluesnapOneTimeContract: string;
	public get BluesnapOneTimeContract() {
		return this.bluesnapOneTimeContract;
	}
	public set BluesnapOneTimeContract(newValue: string) {
		if (this.bluesnapOneTimeContract != newValue) {
			this.bluesnapOneTimeContract = newValue;
			this.MarkAsDirty('BluesnapOneTimeContract');
		}
	}

	private bluesnapInttraStockContractId: string;
	public get BluesnapInttraStockContractId() {
		return this.bluesnapInttraStockContractId;
	}
	public set BluesnapInttraStockContractId(newValue: string) {
		if (this.bluesnapInttraStockContractId != newValue) {
			this.bluesnapInttraStockContractId = newValue;
			this.MarkAsDirty('BluesnapInttraStockContractId');
		}
	}

	private aWBMessagesCCSTypeCode: string;
	public get AWBMessagesCCSTypeCode() {
		return this.aWBMessagesCCSTypeCode;
	}
	public set AWBMessagesCCSTypeCode(newValue: string) {
		if (this.aWBMessagesCCSTypeCode != newValue) {
			this.aWBMessagesCCSTypeCode = newValue;
			this.MarkAsDirty('AWBMessagesCCSTypeCode');
		}
	}

	private pIMA: string;
	public get PIMA() {
		return this.pIMA;
	}
	public set PIMA(newValue: string) {
		if (this.pIMA != newValue) {
			this.pIMA = newValue;
			this.MarkAsDirty('PIMA');
		}
	}

	private activityLastDate: Date;
	public get ActivityLastDate() {
		return this.activityLastDate;
	}
	public set ActivityLastDate(newValue: Date) {
		if (this.activityLastDate != newValue) {
			this.activityLastDate = newValue;
			this.MarkAsDirty('ActivityLastDate');
		}
	}

	private activityTotalLastWeek: number;
	public get ActivityTotalLastWeek() {
		return this.activityTotalLastWeek;
	}
	public set ActivityTotalLastWeek(newValue: number) {
		if (this.activityTotalLastWeek != newValue) {
			this.activityTotalLastWeek = newValue;
			this.MarkAsDirty('ActivityTotalLastWeek');
		}
	}

	private activityTotalLastMonth: number;
	public get ActivityTotalLastMonth() {
		return this.activityTotalLastMonth;
	}
	public set ActivityTotalLastMonth(newValue: number) {
		if (this.activityTotalLastMonth != newValue) {
			this.activityTotalLastMonth = newValue;
			this.MarkAsDirty('ActivityTotalLastMonth');
		}
	}

	private opportunityLastDate: Date;
	public get OpportunityLastDate() {
		return this.opportunityLastDate;
	}
	public set OpportunityLastDate(newValue: Date) {
		if (this.opportunityLastDate != newValue) {
			this.opportunityLastDate = newValue;
			this.MarkAsDirty('OpportunityLastDate');
		}
	}

	private opportunityTotalLastWeek: number;
	public get OpportunityTotalLastWeek() {
		return this.opportunityTotalLastWeek;
	}
	public set OpportunityTotalLastWeek(newValue: number) {
		if (this.opportunityTotalLastWeek != newValue) {
			this.opportunityTotalLastWeek = newValue;
			this.MarkAsDirty('OpportunityTotalLastWeek');
		}
	}

	private opportunityTotalLastMonth: number;
	public get OpportunityTotalLastMonth() {
		return this.opportunityTotalLastMonth;
	}
	public set OpportunityTotalLastMonth(newValue: number) {
		if (this.opportunityTotalLastMonth != newValue) {
			this.opportunityTotalLastMonth = newValue;
			this.MarkAsDirty('OpportunityTotalLastMonth');
		}
	}

	private manageLicencesPerUser: boolean;
	public get ManageLicencesPerUser() {
		return this.manageLicencesPerUser;
	}
	public set ManageLicencesPerUser(newValue: boolean) {
		if (this.manageLicencesPerUser != newValue) {
			this.manageLicencesPerUser = newValue;
			this.MarkAsDirty('ManageLicencesPerUser');
		}
	}

	private isSystemSupportEnabled: boolean;
	public get IsSystemSupportEnabled() {
		return this.isSystemSupportEnabled;
	}
	public set IsSystemSupportEnabled(newValue: boolean) {
		if (this.isSystemSupportEnabled != newValue) {
			this.isSystemSupportEnabled = newValue;
			this.MarkAsDirty('IsSystemSupportEnabled');
		}
	}

	private isDistributorSupportEnabled: boolean;
	public get IsDistributorSupportEnabled() {
		return this.isDistributorSupportEnabled;
	}
	public set IsDistributorSupportEnabled(newValue: boolean) {
		if (this.isDistributorSupportEnabled != newValue) {
			this.isDistributorSupportEnabled = newValue;
			this.MarkAsDirty('IsDistributorSupportEnabled');
		}
	}

	private doBlocking: boolean;
	public get DoBlocking() {
		return this.doBlocking;
	}
	public set DoBlocking(newValue: boolean) {
		if (this.doBlocking != newValue) {
			this.doBlocking = newValue;
			this.MarkAsDirty('DoBlocking');
		}
	}

	private trailDaysLeft: number;
	public get TrailDaysLeft() {
		return this.trailDaysLeft;
	}
	public set TrailDaysLeft(newValue: number) {
		if (this.trailDaysLeft != newValue) {
			this.trailDaysLeft = newValue;
			this.MarkAsDirty('TrailDaysLeft');
		}
	}

	private paidDaysLeft: number;
	public get PaidDaysLeft() {
		return this.paidDaysLeft;
	}
	public set PaidDaysLeft(newValue: number) {
		if (this.paidDaysLeft != newValue) {
			this.paidDaysLeft = newValue;
			this.MarkAsDirty('PaidDaysLeft');
		}
	}

	private isTrial: boolean;
	public get IsTrial() {
		return this.isTrial;
	}
	public set IsTrial(newValue: boolean) {
		if (this.isTrial != newValue) {
			this.isTrial = newValue;
			this.MarkAsDirty('IsTrial');
		}
	}

	private numberOfUsers: number;
	public get NumberOfUsers() {
		return this.numberOfUsers;
	}
	public set NumberOfUsers(newValue: number) {
		if (this.numberOfUsers != newValue) {
			this.numberOfUsers = newValue;
			this.MarkAsDirty('NumberOfUsers');
		}
	}

	private isCargonautEnabled: boolean;
	public get IsCargonautEnabled() {
		return this.isCargonautEnabled;
	}
	public set IsCargonautEnabled(newValue: boolean) {
		if (this.isCargonautEnabled != newValue) {
			this.isCargonautEnabled = newValue;
			this.MarkAsDirty('IsCargonautEnabled');
		}
	}

	private bluesnapContractQTY: number;
	public get BluesnapContractQTY() {
		return this.bluesnapContractQTY;
	}
	public set BluesnapContractQTY(newValue: number) {
		if (this.bluesnapContractQTY != newValue) {
			this.bluesnapContractQTY = newValue;
			this.MarkAsDirty('BluesnapContractQTY');
		}
	}

	private bluesnapCRMContractQTY: number;
	public get BluesnapCRMContractQTY() {
		return this.bluesnapCRMContractQTY;
	}
	public set BluesnapCRMContractQTY(newValue: number) {
		if (this.bluesnapCRMContractQTY != newValue) {
			this.bluesnapCRMContractQTY = newValue;
			this.MarkAsDirty('BluesnapCRMContractQTY');
		}
	}

	private bluesnapEAWBContractQTY: number;
	public get BluesnapEAWBContractQTY() {
		return this.bluesnapEAWBContractQTY;
	}
	public set BluesnapEAWBContractQTY(newValue: number) {
		if (this.bluesnapEAWBContractQTY != newValue) {
			this.bluesnapEAWBContractQTY = newValue;
			this.MarkAsDirty('BluesnapEAWBContractQTY');
		}
	}

	private bluesnapEAWBSContractQTY: number;
	public get BluesnapEAWBSContractQTY() {
		return this.bluesnapEAWBSContractQTY;
	}
	public set BluesnapEAWBSContractQTY(newValue: number) {
		if (this.bluesnapEAWBSContractQTY != newValue) {
			this.bluesnapEAWBSContractQTY = newValue;
			this.MarkAsDirty('BluesnapEAWBSContractQTY');
		}
	}

	private bluesnapOneTimeContractQTY: number;
	public get BluesnapOneTimeContractQTY() {
		return this.bluesnapOneTimeContractQTY;
	}
	public set BluesnapOneTimeContractQTY(newValue: number) {
		if (this.bluesnapOneTimeContractQTY != newValue) {
			this.bluesnapOneTimeContractQTY = newValue;
			this.MarkAsDirty('BluesnapOneTimeContractQTY');
		}
	}

	private bluesnapInttraStockContractQTY: number;
	public get BluesnapInttraStockContractQTY() {
		return this.bluesnapInttraStockContractQTY;
	}
	public set BluesnapInttraStockContractQTY(newValue: number) {
		if (this.bluesnapInttraStockContractQTY != newValue) {
			this.bluesnapInttraStockContractQTY = newValue;
			this.MarkAsDirty('BluesnapInttraStockContractQTY');
		}
	}

	private isDEXXConnectionEnabled: boolean;
	public get IsDEXXConnectionEnabled() {
		return this.isDEXXConnectionEnabled;
	}
	public set IsDEXXConnectionEnabled(newValue: boolean) {
		if (this.isDEXXConnectionEnabled != newValue) {
			this.isDEXXConnectionEnabled = newValue;
			this.MarkAsDirty('IsDEXXConnectionEnabled');
		}
	}

	private lastFWBCargonautSentDate: Date;
	public get LastFWBCargonautSentDate() {
		return this.lastFWBCargonautSentDate;
	}
	public set LastFWBCargonautSentDate(newValue: Date) {
		if (this.lastFWBCargonautSentDate != newValue) {
			this.lastFWBCargonautSentDate = newValue;
			this.MarkAsDirty('LastFWBCargonautSentDate');
		}
	}

	private lastFHLCargonautSentDate: Date;
	public get LastFHLCargonautSentDate() {
		return this.lastFHLCargonautSentDate;
	}
	public set LastFHLCargonautSentDate(newValue: Date) {
		if (this.lastFHLCargonautSentDate != newValue) {
			this.lastFHLCargonautSentDate = newValue;
			this.MarkAsDirty('LastFHLCargonautSentDate');
		}
	}

	private suspendDaysLeft: number;
	public get SuspendDaysLeft() {
		return this.suspendDaysLeft;
	}
	public set SuspendDaysLeft(newValue: number) {
		if (this.suspendDaysLeft != newValue) {
			this.suspendDaysLeft = newValue;
			this.MarkAsDirty('SuspendDaysLeft');
		}
	}

	private isEAWBOnlyDemo: boolean;
	public get IsEAWBOnlyDemo() {
		return this.isEAWBOnlyDemo;
	}
	public set IsEAWBOnlyDemo(newValue: boolean) {
		if (this.isEAWBOnlyDemo != newValue) {
			this.isEAWBOnlyDemo = newValue;
			this.MarkAsDirty('IsEAWBOnlyDemo');
		}
	}

	private isRestrictedByAirline: boolean;
	public get IsRestrictedByAirline() {
		return this.isRestrictedByAirline;
	}
	public set IsRestrictedByAirline(newValue: boolean) {
		if (this.isRestrictedByAirline != newValue) {
			this.isRestrictedByAirline = newValue;
			this.MarkAsDirty('IsRestrictedByAirline');
		}
	}

	private lastFFRSentDate: Date;
	public get LastFFRSentDate() {
		return this.lastFFRSentDate;
	}
	public set LastFFRSentDate(newValue: Date) {
		if (this.lastFFRSentDate != newValue) {
			this.lastFFRSentDate = newValue;
			this.MarkAsDirty('LastFFRSentDate');
		}
	}

	private managesRegisteredAgent: boolean;
	public get ManagesRegisteredAgent() {
		return this.managesRegisteredAgent;
	}
	public set ManagesRegisteredAgent(newValue: boolean) {
		if (this.managesRegisteredAgent != newValue) {
			this.managesRegisteredAgent = newValue;
			this.MarkAsDirty('ManagesRegisteredAgent');
		}
	}

	private fSULastReceivedDate: Date;
	public get FSULastReceivedDate() {
		return this.fSULastReceivedDate;
	}
	public set FSULastReceivedDate(newValue: Date) {
		if (this.fSULastReceivedDate != newValue) {
			this.fSULastReceivedDate = newValue;
			this.MarkAsDirty('FSULastReceivedDate');
		}
	}

	private fSALastReceivedDate: Date;
	public get FSALastReceivedDate() {
		return this.fSALastReceivedDate;
	}
	public set FSALastReceivedDate(newValue: Date) {
		if (this.fSALastReceivedDate != newValue) {
			this.fSALastReceivedDate = newValue;
			this.MarkAsDirty('FSALastReceivedDate');
		}
	}

	private fSRLastSentDate: Date;
	public get FSRLastSentDate() {
		return this.fSRLastSentDate;
	}
	public set FSRLastSentDate(newValue: Date) {
		if (this.fSRLastSentDate != newValue) {
			this.fSRLastSentDate = newValue;
			this.MarkAsDirty('FSRLastSentDate');
		}
	}

	private silverlightEndDate: Date;
	public get SilverlightEndDate() {
		return this.silverlightEndDate;
	}
	public set SilverlightEndDate(newValue: Date) {
		if (this.silverlightEndDate != newValue) {
			this.silverlightEndDate = newValue;
			this.MarkAsDirty('SilverlightEndDate');
		}
	}

	private billingByLogitude: boolean;
	public get BillingByLogitude() {
		return this.billingByLogitude;
	}
	public set BillingByLogitude(newValue: boolean) {
		if (this.billingByLogitude != newValue) {
			this.billingByLogitude = newValue;
			this.MarkAsDirty('BillingByLogitude');
		}
	}

	private resellerCommission: number;
	public get ResellerCommission() {
		return this.resellerCommission;
	}
	public set ResellerCommission(newValue: number) {
		if (this.resellerCommission != newValue) {
			this.resellerCommission = newValue;
			this.MarkAsDirty('ResellerCommission');
		}
	}

	private tenantTypeCode: string;
	public get TenantTypeCode() {
		return this.tenantTypeCode;
	}
	public set TenantTypeCode(newValue: string) {
		if (this.tenantTypeCode != newValue) {
			this.tenantTypeCode = newValue;
			this.MarkAsDirty('TenantTypeCode');
		}
	}

	private tenantConnectedToAirlineCode: string;
	public get TenantConnectedToAirlineCode() {
		return this.tenantConnectedToAirlineCode;
	}
	public set TenantConnectedToAirlineCode(newValue: string) {
		if (this.tenantConnectedToAirlineCode != newValue) {
			this.tenantConnectedToAirlineCode = newValue;
			this.MarkAsDirty('TenantConnectedToAirlineCode');
		}
	}

	private signupRequestRecipients: string;
	public get SignupRequestRecipients() {
		return this.signupRequestRecipients;
	}
	public set SignupRequestRecipients(newValue: string) {
		if (this.signupRequestRecipients != newValue) {
			this.signupRequestRecipients = newValue;
			this.MarkAsDirty('SignupRequestRecipients');
		}
	}

	private loginPageNotes: string;
	public get LoginPageNotes() {
		return this.loginPageNotes;
	}
	public set LoginPageNotes(newValue: string) {
		if (this.loginPageNotes != newValue) {
			this.loginPageNotes = newValue;
			this.MarkAsDirty('LoginPageNotes');
		}
	}

	private supportEmail: string;
	public get SupportEmail() {
		return this.supportEmail;
	}
	public set SupportEmail(newValue: string) {
		if (this.supportEmail != newValue) {
			this.supportEmail = newValue;
			this.MarkAsDirty('SupportEmail');
		}
	}

	private supportActivated: boolean;
	public get SupportActivated() {
		return this.supportActivated;
	}
	public set SupportActivated(newValue: boolean) {
		if (this.supportActivated != newValue) {
			this.supportActivated = newValue;
			this.MarkAsDirty('SupportActivated');
		}
	}

	private isMultiPackage: boolean;
	public get IsMultiPackage() {
		return this.isMultiPackage;
	}
	public set IsMultiPackage(newValue: boolean) {
		if (this.isMultiPackage != newValue) {
			this.isMultiPackage = newValue;
			this.MarkAsDirty('IsMultiPackage');
		}
	}

	private technology: string;
	public get Technology() {
		return this.technology;
	}
	public set Technology(newValue: string) {
		if (this.technology != newValue) {
			this.technology = newValue;
			this.MarkAsDirty('Technology');
		}
	}

	private requestedAirlines: string;
	public get RequestedAirlines() {
		return this.requestedAirlines;
	}
	public set RequestedAirlines(newValue: string) {
		if (this.requestedAirlines != newValue) {
			this.requestedAirlines = newValue;
			this.MarkAsDirty('RequestedAirlines');
		}
	}

	private registeredAirlines: string;
	public get RegisteredAirlines() {
		return this.registeredAirlines;
	}
	public set RegisteredAirlines(newValue: string) {
		if (this.registeredAirlines != newValue) {
			this.registeredAirlines = newValue;
			this.MarkAsDirty('RegisteredAirlines');
		}
	}

	private pendingAirlines: string;
	public get PendingAirlines() {
		return this.pendingAirlines;
	}
	public set PendingAirlines(newValue: string) {
		if (this.pendingAirlines != newValue) {
			this.pendingAirlines = newValue;
			this.MarkAsDirty('PendingAirlines');
		}
	}

	private enableBranding: boolean;
	public get EnableBranding() {
		return this.enableBranding;
	}
	public set EnableBranding(newValue: boolean) {
		if (this.enableBranding != newValue) {
			this.enableBranding = newValue;
			this.MarkAsDirty('EnableBranding');
		}
	}

	private customerURL: string;
	public get CustomerURL() {
		return this.customerURL;
	}
	public set CustomerURL(newValue: string) {
		if (this.customerURL != newValue) {
			this.customerURL = newValue;
			this.MarkAsDirty('CustomerURL');
		}
	}

	private hideSharedlogistics: boolean;
	public get HideSharedlogistics() {
		return this.hideSharedlogistics;
	}
	public set HideSharedlogistics(newValue: boolean) {
		if (this.hideSharedlogistics != newValue) {
			this.hideSharedlogistics = newValue;
			this.MarkAsDirty('HideSharedlogistics');
		}
	}

	private contactEmail: string;
	public get ContactEmail() {
		return this.contactEmail;
	}
	public set ContactEmail(newValue: string) {
		if (this.contactEmail != newValue) {
			this.contactEmail = newValue;
			this.MarkAsDirty('ContactEmail');
		}
	}

	private updateByUserId: string;
	public get UpdateByUserId() {
		return this.updateByUserId;
	}
	public set UpdateByUserId(newValue: string) {
		if (this.updateByUserId != newValue) {
			this.updateByUserId = newValue;
			this.MarkAsDirty('UpdateByUserId');
		}
	}

	private isParentTenant: boolean;
	public get IsParentTenant() {
		return this.isParentTenant;
	}
	public set IsParentTenant(newValue: boolean) {
		if (this.isParentTenant != newValue) {
			this.isParentTenant = newValue;
			this.MarkAsDirty('IsParentTenant');
		}
	}

	private parentTenantId: number;
	public get ParentTenantId() {
		return this.parentTenantId;
	}
	public set ParentTenantId(newValue: number) {
		if (this.parentTenantId != newValue) {
			this.parentTenantId = newValue;
			this.MarkAsDirty('ParentTenantId');
		}
	}

	private agentSharedLogisticsStatisticsLastDate: Date;
	public get AgentSharedLogisticsStatisticsLastDate() {
		return this.agentSharedLogisticsStatisticsLastDate;
	}
	public set AgentSharedLogisticsStatisticsLastDate(newValue: Date) {
		if (this.agentSharedLogisticsStatisticsLastDate != newValue) {
			this.agentSharedLogisticsStatisticsLastDate = newValue;
			this.MarkAsDirty('AgentSharedLogisticsStatisticsLastDate');
		}
	}

	private agentSharedLogisticsStatisticsLastWeek: number;
	public get AgentSharedLogisticsStatisticsLastWeek() {
		return this.agentSharedLogisticsStatisticsLastWeek;
	}
	public set AgentSharedLogisticsStatisticsLastWeek(newValue: number) {
		if (this.agentSharedLogisticsStatisticsLastWeek != newValue) {
			this.agentSharedLogisticsStatisticsLastWeek = newValue;
			this.MarkAsDirty('AgentSharedLogisticsStatisticsLastWeek');
		}
	}

	private agentSharedLogisticsStatisticsLastMonth: number;
	public get AgentSharedLogisticsStatisticsLastMonth() {
		return this.agentSharedLogisticsStatisticsLastMonth;
	}
	public set AgentSharedLogisticsStatisticsLastMonth(newValue: number) {
		if (this.agentSharedLogisticsStatisticsLastMonth != newValue) {
			this.agentSharedLogisticsStatisticsLastMonth = newValue;
			this.MarkAsDirty('AgentSharedLogisticsStatisticsLastMonth');
		}
	}

	private changeHeaderColor: boolean;
	public get ChangeHeaderColor() {
		return this.changeHeaderColor;
	}
	public set ChangeHeaderColor(newValue: boolean) {
		if (this.changeHeaderColor != newValue) {
			this.changeHeaderColor = newValue;
			this.MarkAsDirty('ChangeHeaderColor');
		}
	}

	private documentShareAsDefault: boolean;
	public get DocumentShareAsDefault() {
		return this.documentShareAsDefault;
	}
	public set DocumentShareAsDefault(newValue: boolean) {
		if (this.documentShareAsDefault != newValue) {
			this.documentShareAsDefault = newValue;
			this.MarkAsDirty('DocumentShareAsDefault');
		}
	}

	private stockTypeCode: string;
	public get StockTypeCode() {
		return this.stockTypeCode;
	}
	public set StockTypeCode(newValue: string) {
		if (this.stockTypeCode != newValue) {
			this.stockTypeCode = newValue;
			this.MarkAsDirty('StockTypeCode');
		}
	}

	private isINTTRAStockPrepaid: boolean;
	public get IsINTTRAStockPrepaid() {
		return this.isINTTRAStockPrepaid;
	}
	public set IsINTTRAStockPrepaid(newValue: boolean) {
		if (this.isINTTRAStockPrepaid != newValue) {
			this.isINTTRAStockPrepaid = newValue;
			this.MarkAsDirty('IsINTTRAStockPrepaid');
		}
	}

	private isINTTRAOnlyDemo: boolean;
	public get IsINTTRAOnlyDemo() {
		return this.isINTTRAOnlyDemo;
	}
	public set IsINTTRAOnlyDemo(newValue: boolean) {
		if (this.isINTTRAOnlyDemo != newValue) {
			this.isINTTRAOnlyDemo = newValue;
			this.MarkAsDirty('IsINTTRAOnlyDemo');
		}
	}

	private autoArchiveOnInvoice: boolean;
	public get AutoArchiveOnInvoice() {
		return this.autoArchiveOnInvoice;
	}
	public set AutoArchiveOnInvoice(newValue: boolean) {
		if (this.autoArchiveOnInvoice != newValue) {
			this.autoArchiveOnInvoice = newValue;
			this.MarkAsDirty('AutoArchiveOnInvoice');
		}
	}

	private packageCodeSearchField: string;
	public get PackageCodeSearchField() {
		return this.packageCodeSearchField;
	}
	public set PackageCodeSearchField(newValue: string) {
		if (this.packageCodeSearchField != newValue) {
			this.packageCodeSearchField = newValue;
			this.MarkAsDirty('PackageCodeSearchField');
		}
	}

	private mainColor: string;
	public get MainColor() {
		return this.mainColor;
	}
	public set MainColor(newValue: string) {
		if (this.mainColor != newValue) {
			this.mainColor = newValue;
			this.MarkAsDirty('MainColor');
		}
	}

	private secondaryColor: string;
	public get SecondaryColor() {
		return this.secondaryColor;
	}
	public set SecondaryColor(newValue: string) {
		if (this.secondaryColor != newValue) {
			this.secondaryColor = newValue;
			this.MarkAsDirty('SecondaryColor');
		}
	}

	private backgroundId: string;
	public get BackgroundId() {
		return this.backgroundId;
	}
	public set BackgroundId(newValue: string) {
		if (this.backgroundId != newValue) {
			this.backgroundId = newValue;
			this.MarkAsDirty('BackgroundId');
		}
	}

	private comapnylogoId: string;
	public get ComapnylogoId() {
		return this.comapnylogoId;
	}
	public set ComapnylogoId(newValue: string) {
		if (this.comapnylogoId != newValue) {
			this.comapnylogoId = newValue;
			this.MarkAsDirty('ComapnylogoId');
		}
	}

	private invertedLogoId: string;
	public get InvertedLogoId() {
		return this.invertedLogoId;
	}
	public set InvertedLogoId(newValue: string) {
		if (this.invertedLogoId != newValue) {
			this.invertedLogoId = newValue;
			this.MarkAsDirty('InvertedLogoId');
		}
	}

	private browserIconId: string;
	public get BrowserIconId() {
		return this.browserIconId;
	}
	public set BrowserIconId(newValue: string) {
		if (this.browserIconId != newValue) {
			this.browserIconId = newValue;
			this.MarkAsDirty('BrowserIconId');
		}
	}

	private shipmentHeaderImageId: string;
	public get ShipmentHeaderImageId() {
		return this.shipmentHeaderImageId;
	}
	public set ShipmentHeaderImageId(newValue: string) {
		if (this.shipmentHeaderImageId != newValue) {
			this.shipmentHeaderImageId = newValue;
			this.MarkAsDirty('ShipmentHeaderImageId');
		}
	}

	private privateLabelId: string;
	public get PrivateLabelId() {
		return this.privateLabelId;
	}
	public set PrivateLabelId(newValue: string) {
		if (this.privateLabelId != newValue) {
			this.privateLabelId = newValue;
			this.MarkAsDirty('PrivateLabelId');
		}
	}

	public PackagesCodes_PK: Array<string> = [];

	public PackagesCodes_BS: Array<string> = [];
	private globalTenant: string;
	public get GlobalTenant() {
		return this.globalTenant;
	}
	public set GlobalTenant(newValue: string) {
		if (this.globalTenant != newValue) {
			this.globalTenant = newValue;
			this.MarkAsDirty('GlobalTenant');
		}
	}

	private tenantManagementLicenses: TenantManagementLicensePM[];
	get TenantManagementLicenses() {
		if (this.tenantManagementLicenses == null) {
			this.tenantManagementLicenses = [];
		}

		return this.tenantManagementLicenses;
	}
	set TenantManagementLicenses(newValue: TenantManagementLicensePM[]) {
		if (this.tenantManagementLicenses != newValue) {
			this.tenantManagementLicenses = newValue;
		}
	}
	public AddTenantManagementLicensePM(item: TenantManagementLicensePM) {
		if (item != null) {
			var index = this.TenantManagementLicenses.indexOf(item);
			if (index == -1) {
				item.EntityParentPM = this;

				this.TenantManagementLicenses.push(item);
				this.MarkAsDirty();
			}
		}
	}
	public RemoveTenantManagementLicensePM(item: TenantManagementLicensePM) {
		if (item != null) {
			var index = this.TenantManagementLicenses.indexOf(item);
			if (index > -1) {
				this.TenantManagementLicenses.splice(index, 1);
				this.MarkAsDirty();
			}
		}
	}
	//public TenantManagementLicenses: Array<TenantManagementLicensePMPM>= [];

	private addOns: TenantAddOnPM[];
	get AddOns() {
		if (this.addOns == null) {
			this.addOns = [];
		}

		return this.addOns;
	}
	set AddOns(newValue: TenantAddOnPM[]) {
		if (this.addOns != newValue) {
			this.addOns = newValue;
		}
	}
	public AddTenantAddOnPM(item: TenantAddOnPM) {
		if (item != null) {
			var index = this.AddOns.indexOf(item);
			if (index == -1) {
				item.EntityParentPM = this;

				this.AddOns.push(item);
				this.MarkAsDirty();
			}
		}
	}
	public RemoveTenantAddOnPM(item: TenantAddOnPM) {
		if (item != null) {
			var index = this.AddOns.indexOf(item);
			if (index > -1) {
				this.AddOns.splice(index, 1);
				this.MarkAsDirty();
			}
		}
	}
	//public AddOns: Array<TenantAddOnPMPM>= [];
	private isTestTenant: boolean;
	public get IsTestTenant() {
		return this.isTestTenant;
	}
	public set IsTestTenant(newValue: boolean) {
		if (this.isTestTenant != newValue) {
			this.isTestTenant = newValue;
			this.MarkAsDirty('IsTestTenant');
		}
	}

	private mainAdditionalPackageApplied: boolean;
	public get MainAdditionalPackageApplied() {
		return this.mainAdditionalPackageApplied;
	}
	public set MainAdditionalPackageApplied(newValue: boolean) {
		if (this.mainAdditionalPackageApplied != newValue) {
			this.mainAdditionalPackageApplied = newValue;
			this.MarkAsDirty('MainAdditionalPackageApplied');
		}
	}

	private totalPrice: number;
	public get TotalPrice() {
		return this.totalPrice;
	}
	public set TotalPrice(newValue: number) {
		if (this.totalPrice != newValue) {
			this.totalPrice = newValue;
			this.MarkAsDirty('TotalPrice');
		}
	}

	private mainColorOpacity: string;
	public get MainColorOpacity() {
		return this.mainColorOpacity;
	}
	public set MainColorOpacity(newValue: string) {
		if (this.mainColorOpacity != newValue) {
			this.mainColorOpacity = newValue;
			this.MarkAsDirty('MainColorOpacity');
		}
	}

	private supportDomain: string;
	public get SupportDomain() {
		return this.supportDomain;
	}
	public set SupportDomain(newValue: string) {
		if (this.supportDomain != newValue) {
			this.supportDomain = newValue;
			this.MarkAsDirty('SupportDomain');
		}
	}

	private secondaryColorOpacity: string;
	public get SecondaryColorOpacity() {
		return this.secondaryColorOpacity;
	}
	public set SecondaryColorOpacity(newValue: string) {
		if (this.secondaryColorOpacity != newValue) {
			this.secondaryColorOpacity = newValue;
			this.MarkAsDirty('SecondaryColorOpacity');
		}
	}

	private totalNumberOfUsers: number;
	public get TotalNumberOfUsers() {
		return this.totalNumberOfUsers;
	}
	public set TotalNumberOfUsers(newValue: number) {
		if (this.totalNumberOfUsers != newValue) {
			this.totalNumberOfUsers = newValue;
			this.MarkAsDirty('TotalNumberOfUsers');
		}
	}

	private totalFreeUsers: number;
	public get TotalFreeUsers() {
		return this.totalFreeUsers;
	}
	public set TotalFreeUsers(newValue: number) {
		if (this.totalFreeUsers != newValue) {
			this.totalFreeUsers = newValue;
			this.MarkAsDirty('TotalFreeUsers');
		}
	}

	private averagePrice: number;
	public get AveragePrice() {
		return this.averagePrice;
	}
	public set AveragePrice(newValue: number) {
		if (this.averagePrice != newValue) {
			this.averagePrice = newValue;
			this.MarkAsDirty('AveragePrice');
		}
	}

	private totalPaymentamount: number;
	public get TotalPaymentamount() {
		return this.totalPaymentamount;
	}
	public set TotalPaymentamount(newValue: number) {
		if (this.totalPaymentamount != newValue) {
			this.totalPaymentamount = newValue;
			this.MarkAsDirty('TotalPaymentamount');
		}
	}

	private noPaymentForChildTenants: boolean;
	public get NoPaymentForChildTenants() {
		return this.noPaymentForChildTenants;
	}
	public set NoPaymentForChildTenants(newValue: boolean) {
		if (this.noPaymentForChildTenants != newValue) {
			this.noPaymentForChildTenants = newValue;
			this.MarkAsDirty('NoPaymentForChildTenants');
		}
	}

	private lastEbookingSentDate: Date;
	public get LastEbookingSentDate() {
		return this.lastEbookingSentDate;
	}
	public set LastEbookingSentDate(newValue: Date) {
		if (this.lastEbookingSentDate != newValue) {
			this.lastEbookingSentDate = newValue;
			this.MarkAsDirty('LastEbookingSentDate');
		}
	}

	private lastSISentDate: Date;
	public get LastSISentDate() {
		return this.lastSISentDate;
	}
	public set LastSISentDate(newValue: Date) {
		if (this.lastSISentDate != newValue) {
			this.lastSISentDate = newValue;
			this.MarkAsDirty('LastSISentDate');
		}
	}

	private numberOfBookingSentLastWeek: number;
	public get NumberOfBookingSentLastWeek() {
		return this.numberOfBookingSentLastWeek;
	}
	public set NumberOfBookingSentLastWeek(newValue: number) {
		if (this.numberOfBookingSentLastWeek != newValue) {
			this.numberOfBookingSentLastWeek = newValue;
			this.MarkAsDirty('NumberOfBookingSentLastWeek');
		}
	}

	private numberOfSISentLastWeek: number;
	public get NumberOfSISentLastWeek() {
		return this.numberOfSISentLastWeek;
	}
	public set NumberOfSISentLastWeek(newValue: number) {
		if (this.numberOfSISentLastWeek != newValue) {
			this.numberOfSISentLastWeek = newValue;
			this.MarkAsDirty('NumberOfSISentLastWeek');
		}
	}

	private lastContainerStatusReceived: Date;
	public get LastContainerStatusReceived() {
		return this.lastContainerStatusReceived;
	}
	public set LastContainerStatusReceived(newValue: Date) {
		if (this.lastContainerStatusReceived != newValue) {
			this.lastContainerStatusReceived = newValue;
			this.MarkAsDirty('LastContainerStatusReceived');
		}
	}

	private lastTariffUpdateDate: Date;
	public get LastTariffUpdateDate() {
		return this.lastTariffUpdateDate;
	}
	public set LastTariffUpdateDate(newValue: Date) {
		if (this.lastTariffUpdateDate != newValue) {
			this.lastTariffUpdateDate = newValue;
			this.MarkAsDirty('LastTariffUpdateDate');
		}
	}

	private lastTariffUsageDate: Date;
	public get LastTariffUsageDate() {
		return this.lastTariffUsageDate;
	}
	public set LastTariffUsageDate(newValue: Date) {
		if (this.lastTariffUsageDate != newValue) {
			this.lastTariffUsageDate = newValue;
			this.MarkAsDirty('LastTariffUsageDate');
		}
	}

	private lastWeekCreatedTariffs: number;
	public get LastWeekCreatedTariffs() {
		return this.lastWeekCreatedTariffs;
	}
	public set LastWeekCreatedTariffs(newValue: number) {
		if (this.lastWeekCreatedTariffs != newValue) {
			this.lastWeekCreatedTariffs = newValue;
			this.MarkAsDirty('LastWeekCreatedTariffs');
		}
	}

	private lastMonthCreatedTariffs: number;
	public get LastMonthCreatedTariffs() {
		return this.lastMonthCreatedTariffs;
	}
	public set LastMonthCreatedTariffs(newValue: number) {
		if (this.lastMonthCreatedTariffs != newValue) {
			this.lastMonthCreatedTariffs = newValue;
			this.MarkAsDirty('LastMonthCreatedTariffs');
		}
	}

	private scheduledTasksLimitPerReport: number;
	public get ScheduledTasksLimitPerReport() {
		return this.scheduledTasksLimitPerReport;
	}
	public set ScheduledTasksLimitPerReport(newValue: number) {
		if (this.scheduledTasksLimitPerReport != newValue) {
			this.scheduledTasksLimitPerReport = newValue;
			this.MarkAsDirty('ScheduledTasksLimitPerReport');
		}
	}

	private isHybrid: boolean;
	public get IsHybrid() {
		return this.isHybrid;
	}
	public set IsHybrid(newValue: boolean) {
		if (this.isHybrid != newValue) {
			this.isHybrid = newValue;
			this.MarkAsDirty('IsHybrid');
		}
	}

	public OldEntityPM: TenantManagementPM;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;

			if (propertyName != null) {
				// this.PropertyChanged.emit(new PropertyChangedArgs(propertyName,this));
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'TenantManagement');
			}
		}
	}
	private MyClone: TenantManagementPM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
