//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class LastRunDetailPM {
	constructor() {
		this.IsDirty = false;
	}

	private id: string;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: string) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private tenant: number;
	public get Tenant() {
		return this.tenant;
	}
	public set Tenant(newValue: number) {
		if (this.tenant != newValue) {
			this.tenant = newValue;
			this.MarkAsDirty('Tenant');
		}
	}

	private lastRunDate: Date;
	public get LastRunDate() {
		return this.lastRunDate;
	}
	public set LastRunDate(newValue: Date) {
		if (this.lastRunDate != newValue) {
			this.lastRunDate = newValue;
			this.MarkAsDirty('LastRunDate');
		}
	}

	private lastRunByUserId: string;
	public get LastRunByUserId() {
		return this.lastRunByUserId;
	}
	public set LastRunByUserId(newValue: string) {
		if (this.lastRunByUserId != newValue) {
			this.lastRunByUserId = newValue;
			this.MarkAsDirty('LastRunByUserId');
		}
	}

	private lastRunByUserName: string;
	public get LastRunByUserName() {
		return this.lastRunByUserName;
	}
	public set LastRunByUserName(newValue: string) {
		if (this.lastRunByUserName != newValue) {
			this.lastRunByUserName = newValue;
			this.MarkAsDirty('LastRunByUserName');
		}
	}

	public OldEntityPM: LastRunDetailPM;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;

			if (propertyName != null) {
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'LastRunDetail');
			}
		}
	}

	private MyClone: LastRunDetailPM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
