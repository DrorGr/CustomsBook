//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

import { TenantManagementPM } from './TenantManagementPM';

import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class TenantManagementLicensePM {
	private id: string;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: string) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private tenant: number;
	public get Tenant() {
		return this.tenant;
	}
	public set Tenant(newValue: number) {
		if (this.tenant != newValue) {
			this.tenant = newValue;
			this.MarkAsDirty('Tenant');
		}
	}

	private packageCode: string;
	public get PackageCode() {
		return this.packageCode;
	}
	public set PackageCode(newValue: string) {
		if (this.packageCode != newValue) {
			this.packageCode = newValue;
			this.MarkAsDirty('PackageCode');
		}
	}

	private numberOfUsers: number;
	public get NumberOfUsers() {
		return this.numberOfUsers;
	}
	public set NumberOfUsers(newValue: number) {
		if (this.numberOfUsers != newValue) {
			this.numberOfUsers = newValue;
			this.MarkAsDirty('NumberOfUsers');
		}
	}

	private freeUsers: number;
	public get FreeUsers() {
		return this.freeUsers;
	}
	public set FreeUsers(newValue: number) {
		if (this.freeUsers != newValue) {
			this.freeUsers = newValue;
			this.MarkAsDirty('FreeUsers');
		}
	}

	private price: number;
	public get Price() {
		return this.price;
	}
	public set Price(newValue: number) {
		if (this.price != newValue) {
			this.price = newValue;
			this.MarkAsDirty('Price');
		}
	}

	private totalPrice: number;
	public get TotalPrice() {
		return this.totalPrice;
	}
	public set TotalPrice(newValue: number) {
		if (this.totalPrice != newValue) {
			this.totalPrice = newValue;
			this.MarkAsDirty('TotalPrice');
		}
	}

	private changeSetOp: string;
	public get ChangeSetOp() {
		return this.changeSetOp;
	}
	public set ChangeSetOp(newValue: string) {
		if (this.changeSetOp != newValue) {
			this.changeSetOp = newValue;
			this.MarkAsDirty('ChangeSetOp');
		}
	}

	public OldEntityPM: TenantManagementLicensePM;

	private entityParentPM: any;
	public get EntityParentPM() {
		return this.entityParentPM;
	}
	public set EntityParentPM(newValue: any) {
		this.entityParentPM = newValue;
	}

	public UniqueKey: string;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;
			if (this.EntityParentPM) {
				this.EntityParentPM.MarkAsDirty();
			}
			if (propertyName != null) {
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'TenantManagementLicense');
			}
		}
	}
	private MyClone: TenantManagementLicensePM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
