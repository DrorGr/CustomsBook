//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class ApiCredintialsPM {
	constructor() {
		this.IsDirty = false;
	}

	private id: string;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: string) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private tenant: number;
	public get Tenant() {
		return this.tenant;
	}
	public set Tenant(newValue: number) {
		if (this.tenant != newValue) {
			this.tenant = newValue;
			this.MarkAsDirty('Tenant');
		}
	}

	private usedFor: string;
	public get UsedFor() {
		return this.usedFor;
	}
	public set UsedFor(newValue: string) {
		if (this.usedFor != newValue) {
			this.usedFor = newValue;
			this.MarkAsDirty('UsedFor');
		}
	}

	private hashedPrimaryAccessKey: string;
	public get HashedPrimaryAccessKey() {
		return this.hashedPrimaryAccessKey;
	}
	public set HashedPrimaryAccessKey(newValue: string) {
		if (this.hashedPrimaryAccessKey != newValue) {
			this.hashedPrimaryAccessKey = newValue;
			this.MarkAsDirty('HashedPrimaryAccessKey');
		}
	}

	private hashedSeconderyAccessKey: string;
	public get HashedSeconderyAccessKey() {
		return this.hashedSeconderyAccessKey;
	}
	public set HashedSeconderyAccessKey(newValue: string) {
		if (this.hashedSeconderyAccessKey != newValue) {
			this.hashedSeconderyAccessKey = newValue;
			this.MarkAsDirty('HashedSeconderyAccessKey');
		}
	}

	private createDate: Date;
	public get CreateDate() {
		return this.createDate;
	}
	public set CreateDate(newValue: Date) {
		if (this.createDate != newValue) {
			this.createDate = newValue;
			this.MarkAsDirty('CreateDate');
		}
	}

	private updateDate: Date;
	public get UpdateDate() {
		return this.updateDate;
	}
	public set UpdateDate(newValue: Date) {
		if (this.updateDate != newValue) {
			this.updateDate = newValue;
			this.MarkAsDirty('UpdateDate');
		}
	}

	private allowedIPs: string;
	public get AllowedIPs() {
		return this.allowedIPs;
	}
	public set AllowedIPs(newValue: string) {
		if (this.allowedIPs != newValue) {
			this.allowedIPs = newValue;
			this.MarkAsDirty('AllowedIPs');
		}
	}

	private createdBy: string;
	public get CreatedBy() {
		return this.createdBy;
	}
	public set CreatedBy(newValue: string) {
		if (this.createdBy != newValue) {
			this.createdBy = newValue;
			this.MarkAsDirty('CreatedBy');
		}
	}

	private updatedBy: string;
	public get UpdatedBy() {
		return this.updatedBy;
	}
	public set UpdatedBy(newValue: string) {
		if (this.updatedBy != newValue) {
			this.updatedBy = newValue;
			this.MarkAsDirty('UpdatedBy');
		}
	}

	private maskedPrimaryAccessKey: string;
	public get MaskedPrimaryAccessKey() {
		return this.maskedPrimaryAccessKey;
	}
	public set MaskedPrimaryAccessKey(newValue: string) {
		if (this.maskedPrimaryAccessKey != newValue) {
			this.maskedPrimaryAccessKey = newValue;
			this.MarkAsDirty('MaskedPrimaryAccessKey');
		}
	}

	private maskedSeconderyAccessKey: string;
	public get MaskedSeconderyAccessKey() {
		return this.maskedSeconderyAccessKey;
	}
	public set MaskedSeconderyAccessKey(newValue: string) {
		if (this.maskedSeconderyAccessKey != newValue) {
			this.maskedSeconderyAccessKey = newValue;
			this.MarkAsDirty('MaskedSeconderyAccessKey');
		}
	}

	public OldEntityPM: ApiCredintialsPM;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;

			if (propertyName != null) {
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'ApiCredintials');
			}
		}
	}
	private MyClone: ApiCredintialsPM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
