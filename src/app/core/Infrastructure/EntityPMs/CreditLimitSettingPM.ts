//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

// import {UIProperties, UIProperty} from '../../Infrastructure/Components/LogitudeComponents/UIProperties';
import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class CreditLimitSettingPM {
	//   @Output() PropertyChanged: EventEmitter<PropertyChangedArgs> = new EventEmitter<PropertyChangedArgs>();
	//
	constructor() {
		//
		this.IsDirty = false;
	}

	private id: string;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: string) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private tenant: number;
	public get Tenant() {
		return this.tenant;
	}
	public set Tenant(newValue: number) {
		if (this.tenant != newValue) {
			this.tenant = newValue;
			this.MarkAsDirty('Tenant');
		}
	}

	private isCreditLimitEnabled: boolean;
	public get IsCreditLimitEnabled() {
		return this.isCreditLimitEnabled;
	}
	public set IsCreditLimitEnabled(newValue: boolean) {
		if (this.isCreditLimitEnabled != newValue) {
			this.isCreditLimitEnabled = newValue;
			this.MarkAsDirty('IsCreditLimitEnabled');
		}
	}

	private invoiceCreationWarning: boolean;
	public get InvoiceCreationWarning() {
		return this.invoiceCreationWarning;
	}
	public set InvoiceCreationWarning(newValue: boolean) {
		if (this.invoiceCreationWarning != newValue) {
			this.invoiceCreationWarning = newValue;
			this.MarkAsDirty('InvoiceCreationWarning');
		}
	}

	private invoiceCreationBlock: boolean;
	public get InvoiceCreationBlock() {
		return this.invoiceCreationBlock;
	}
	public set InvoiceCreationBlock(newValue: boolean) {
		if (this.invoiceCreationBlock != newValue) {
			this.invoiceCreationBlock = newValue;
			this.MarkAsDirty('InvoiceCreationBlock');
		}
	}

	private shipmentCreationBlock: boolean;
	public get ShipmentCreationBlock() {
		return this.shipmentCreationBlock;
	}
	public set ShipmentCreationBlock(newValue: boolean) {
		if (this.shipmentCreationBlock != newValue) {
			this.shipmentCreationBlock = newValue;
			this.MarkAsDirty('ShipmentCreationBlock');
		}
	}

	private customersShipmentsBlock: boolean;
	public get CustomersShipmentsBlock() {
		return this.customersShipmentsBlock;
	}
	public set CustomersShipmentsBlock(newValue: boolean) {
		if (this.customersShipmentsBlock != newValue) {
			this.customersShipmentsBlock = newValue;
			this.MarkAsDirty('CustomersShipmentsBlock');
		}
	}

	private agentsShipmentsBlock: boolean;
	public get AgentsShipmentsBlock() {
		return this.agentsShipmentsBlock;
	}
	public set AgentsShipmentsBlock(newValue: boolean) {
		if (this.agentsShipmentsBlock != newValue) {
			this.agentsShipmentsBlock = newValue;
			this.MarkAsDirty('AgentsShipmentsBlock');
		}
	}

	private shipperConsigneeShipmentBlock: boolean;
	public get ShipperConsigneeShipmentBlock() {
		return this.shipperConsigneeShipmentBlock;
	}
	public set ShipperConsigneeShipmentBlock(newValue: boolean) {
		if (this.shipperConsigneeShipmentBlock != newValue) {
			this.shipperConsigneeShipmentBlock = newValue;
			this.MarkAsDirty('ShipperConsigneeShipmentBlock');
		}
	}

	private customsAgentsShipmentsBlock: boolean;
	public get CustomsAgentsShipmentsBlock() {
		return this.customsAgentsShipmentsBlock;
	}
	public set CustomsAgentsShipmentsBlock(newValue: boolean) {
		if (this.customsAgentsShipmentsBlock != newValue) {
			this.customsAgentsShipmentsBlock = newValue;
			this.MarkAsDirty('CustomsAgentsShipmentsBlock');
		}
	}

	private shippingAgentsShipmentsBlock: boolean;
	public get ShippingAgentsShipmentsBlock() {
		return this.shippingAgentsShipmentsBlock;
	}
	public set ShippingAgentsShipmentsBlock(newValue: boolean) {
		if (this.shippingAgentsShipmentsBlock != newValue) {
			this.shippingAgentsShipmentsBlock = newValue;
			this.MarkAsDirty('ShippingAgentsShipmentsBlock');
		}
	}

	private airlinesShipmentsBlock: boolean;
	public get AirlinesShipmentsBlock() {
		return this.airlinesShipmentsBlock;
	}
	public set AirlinesShipmentsBlock(newValue: boolean) {
		if (this.airlinesShipmentsBlock != newValue) {
			this.airlinesShipmentsBlock = newValue;
			this.MarkAsDirty('AirlinesShipmentsBlock');
		}
	}

	private shippingLinesShipmentsBlock: boolean;
	public get ShippingLinesShipmentsBlock() {
		return this.shippingLinesShipmentsBlock;
	}
	public set ShippingLinesShipmentsBlock(newValue: boolean) {
		if (this.shippingLinesShipmentsBlock != newValue) {
			this.shippingLinesShipmentsBlock = newValue;
			this.MarkAsDirty('ShippingLinesShipmentsBlock');
		}
	}

	private truckersShipmentsBlock: boolean;
	public get TruckersShipmentsBlock() {
		return this.truckersShipmentsBlock;
	}
	public set TruckersShipmentsBlock(newValue: boolean) {
		if (this.truckersShipmentsBlock != newValue) {
			this.truckersShipmentsBlock = newValue;
			this.MarkAsDirty('TruckersShipmentsBlock');
		}
	}

	private vendorsShipmentsBlock: boolean;
	public get VendorsShipmentsBlock() {
		return this.vendorsShipmentsBlock;
	}
	public set VendorsShipmentsBlock(newValue: boolean) {
		if (this.vendorsShipmentsBlock != newValue) {
			this.vendorsShipmentsBlock = newValue;
			this.MarkAsDirty('VendorsShipmentsBlock');
		}
	}

	private warehousesShipmentsBlock: boolean;
	public get WarehousesShipmentsBlock() {
		return this.warehousesShipmentsBlock;
	}
	public set WarehousesShipmentsBlock(newValue: boolean) {
		if (this.warehousesShipmentsBlock != newValue) {
			this.warehousesShipmentsBlock = newValue;
			this.MarkAsDirty('WarehousesShipmentsBlock');
		}
	}

	private customersInvoicesBlock: boolean;
	public get CustomersInvoicesBlock() {
		return this.customersInvoicesBlock;
	}
	public set CustomersInvoicesBlock(newValue: boolean) {
		if (this.customersInvoicesBlock != newValue) {
			this.customersInvoicesBlock = newValue;
			this.MarkAsDirty('CustomersInvoicesBlock');
		}
	}

	private agentsInvoicesBlock: boolean;
	public get AgentsInvoicesBlock() {
		return this.agentsInvoicesBlock;
	}
	public set AgentsInvoicesBlock(newValue: boolean) {
		if (this.agentsInvoicesBlock != newValue) {
			this.agentsInvoicesBlock = newValue;
			this.MarkAsDirty('AgentsInvoicesBlock');
		}
	}

	private shipperConsigneeInvoiceBlock: boolean;
	public get ShipperConsigneeInvoiceBlock() {
		return this.shipperConsigneeInvoiceBlock;
	}
	public set ShipperConsigneeInvoiceBlock(newValue: boolean) {
		if (this.shipperConsigneeInvoiceBlock != newValue) {
			this.shipperConsigneeInvoiceBlock = newValue;
			this.MarkAsDirty('ShipperConsigneeInvoiceBlock');
		}
	}

	private customsAgentsInvoicesBlock: boolean;
	public get CustomsAgentsInvoicesBlock() {
		return this.customsAgentsInvoicesBlock;
	}
	public set CustomsAgentsInvoicesBlock(newValue: boolean) {
		if (this.customsAgentsInvoicesBlock != newValue) {
			this.customsAgentsInvoicesBlock = newValue;
			this.MarkAsDirty('CustomsAgentsInvoicesBlock');
		}
	}

	private shippingAgentsInvoicesBlock: boolean;
	public get ShippingAgentsInvoicesBlock() {
		return this.shippingAgentsInvoicesBlock;
	}
	public set ShippingAgentsInvoicesBlock(newValue: boolean) {
		if (this.shippingAgentsInvoicesBlock != newValue) {
			this.shippingAgentsInvoicesBlock = newValue;
			this.MarkAsDirty('ShippingAgentsInvoicesBlock');
		}
	}

	private airlinesInvoicesBlock: boolean;
	public get AirlinesInvoicesBlock() {
		return this.airlinesInvoicesBlock;
	}
	public set AirlinesInvoicesBlock(newValue: boolean) {
		if (this.airlinesInvoicesBlock != newValue) {
			this.airlinesInvoicesBlock = newValue;
			this.MarkAsDirty('AirlinesInvoicesBlock');
		}
	}

	private shippingLinesInvoicesBlock: boolean;
	public get ShippingLinesInvoicesBlock() {
		return this.shippingLinesInvoicesBlock;
	}
	public set ShippingLinesInvoicesBlock(newValue: boolean) {
		if (this.shippingLinesInvoicesBlock != newValue) {
			this.shippingLinesInvoicesBlock = newValue;
			this.MarkAsDirty('ShippingLinesInvoicesBlock');
		}
	}

	private truckersInvoicesBlock: boolean;
	public get TruckersInvoicesBlock() {
		return this.truckersInvoicesBlock;
	}
	public set TruckersInvoicesBlock(newValue: boolean) {
		if (this.truckersInvoicesBlock != newValue) {
			this.truckersInvoicesBlock = newValue;
			this.MarkAsDirty('TruckersInvoicesBlock');
		}
	}

	private vendorsInvoicesBlock: boolean;
	public get VendorsInvoicesBlock() {
		return this.vendorsInvoicesBlock;
	}
	public set VendorsInvoicesBlock(newValue: boolean) {
		if (this.vendorsInvoicesBlock != newValue) {
			this.vendorsInvoicesBlock = newValue;
			this.MarkAsDirty('VendorsInvoicesBlock');
		}
	}

	private warehousesInvoicesBlock: boolean;
	public get WarehousesInvoicesBlock() {
		return this.warehousesInvoicesBlock;
	}
	public set WarehousesInvoicesBlock(newValue: boolean) {
		if (this.warehousesInvoicesBlock != newValue) {
			this.warehousesInvoicesBlock = newValue;
			this.MarkAsDirty('WarehousesInvoicesBlock');
		}
	}

	private shipmentCreationWarning: boolean;
	public get ShipmentCreationWarning() {
		return this.shipmentCreationWarning;
	}
	public set ShipmentCreationWarning(newValue: boolean) {
		if (this.shipmentCreationWarning != newValue) {
			this.shipmentCreationWarning = newValue;
			this.MarkAsDirty('ShipmentCreationWarning');
		}
	}

	public OldEntityPM: CreditLimitSettingPM;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;

			if (propertyName != null) {
				// this.PropertyChanged.emit(new PropertyChangedArgs(propertyName, this));
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'CreditLimitSetting');
			}
		}
	}
	private MyClone: CreditLimitSettingPM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
