//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

import { InboundEmailPM } from './InboundEmailPM';

import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class InboundEmailLinePM {
	private id: string;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: string) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private tenant: number;
	public get Tenant() {
		return this.tenant;
	}
	public set Tenant(newValue: number) {
		if (this.tenant != newValue) {
			this.tenant = newValue;
			this.MarkAsDirty('Tenant');
		}
	}

	private sender: string;
	public get Sender() {
		return this.sender;
	}
	public set Sender(newValue: string) {
		if (this.sender != newValue) {
			this.sender = newValue;
			this.MarkAsDirty('Sender');
		}
	}

	private recepient: string;
	public get Recepient() {
		return this.recepient;
	}
	public set Recepient(newValue: string) {
		if (this.recepient != newValue) {
			this.recepient = newValue;
			this.MarkAsDirty('Recepient');
		}
	}

	private subject: string;
	public get Subject() {
		return this.subject;
	}
	public set Subject(newValue: string) {
		if (this.subject != newValue) {
			this.subject = newValue;
			this.MarkAsDirty('Subject');
		}
	}

	private body: string;
	public get Body() {
		return this.body;
	}
	public set Body(newValue: string) {
		if (this.body != newValue) {
			this.body = newValue;
			this.MarkAsDirty('Body');
		}
	}

	private fullBody: string;
	public get FullBody() {
		return this.fullBody;
	}
	public set FullBody(newValue: string) {
		if (this.fullBody != newValue) {
			this.fullBody = newValue;
			this.MarkAsDirty('FullBody');
		}
	}

	private hTMLFullBody: string;
	public get HTMLFullBody() {
		return this.hTMLFullBody;
	}
	public set HTMLFullBody(newValue: string) {
		if (this.hTMLFullBody != newValue) {
			this.hTMLFullBody = newValue;
			this.MarkAsDirty('HTMLFullBody');
		}
	}

	private createDate: Date;
	public get CreateDate() {
		return this.createDate;
	}
	public set CreateDate(newValue: Date) {
		if (this.createDate != newValue) {
			this.createDate = newValue;
			this.MarkAsDirty('CreateDate');
		}
	}

	private cCs: string;
	public get CCs() {
		return this.cCs;
	}
	public set CCs(newValue: string) {
		if (this.cCs != newValue) {
			this.cCs = newValue;
			this.MarkAsDirty('CCs');
		}
	}

	private bcc: string;
	public get Bcc() {
		return this.bcc;
	}
	public set Bcc(newValue: string) {
		if (this.bcc != newValue) {
			this.bcc = newValue;
			this.MarkAsDirty('Bcc');
		}
	}

	private internalUsers: string;
	public get InternalUsers() {
		return this.internalUsers;
	}
	public set InternalUsers(newValue: string) {
		if (this.internalUsers != newValue) {
			this.internalUsers = newValue;
			this.MarkAsDirty('InternalUsers');
		}
	}

	private direction: string;
	public get Direction() {
		return this.direction;
	}
	public set Direction(newValue: string) {
		if (this.direction != newValue) {
			this.direction = newValue;
			this.MarkAsDirty('Direction');
		}
	}

	private inboundEmailId: string;
	public get InboundEmailId() {
		return this.inboundEmailId;
	}
	public set InboundEmailId(newValue: string) {
		if (this.inboundEmailId != newValue) {
			this.inboundEmailId = newValue;
			this.MarkAsDirty('InboundEmailId');
		}
	}

	private communicationLogId: string;
	public get CommunicationLogId() {
		return this.communicationLogId;
	}
	public set CommunicationLogId(newValue: string) {
		if (this.communicationLogId != newValue) {
			this.communicationLogId = newValue;
			this.MarkAsDirty('CommunicationLogId');
		}
	}

	private changeSetOp: string;
	public get ChangeSetOp() {
		return this.changeSetOp;
	}
	public set ChangeSetOp(newValue: string) {
		if (this.changeSetOp != newValue) {
			this.changeSetOp = newValue;
			this.MarkAsDirty('ChangeSetOp');
		}
	}

	private entityLineId: string;
	public get EntityLineId() {
		return this.entityLineId;
	}
	public set EntityLineId(newValue: string) {
		if (this.entityLineId != newValue) {
			this.entityLineId = newValue;
			this.MarkAsDirty('EntityLineId');
		}
	}

	private inboundEmail: any;
	public get InboundEmail() {
		return this.inboundEmail;
	}
	public set InboundEmail(newValue: any) {
		if (this.inboundEmail != newValue) {
			this.inboundEmail = newValue;
			this.MarkAsDirty('InboundEmail');
		}
	}

	public OldEntityPM: InboundEmailLinePM;

	private entityParentPM: any;
	public get EntityParentPM() {
		return this.entityParentPM;
	}
	public set EntityParentPM(newValue: any) {
		this.entityParentPM = newValue;
	}

	public UniqueKey: string;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;
			if (this.EntityParentPM) {
				this.EntityParentPM.MarkAsDirty();
			}
			if (propertyName != null) {
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'InboundEmailLine');
			}
		}
	}
	private MyClone: InboundEmailLinePM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
