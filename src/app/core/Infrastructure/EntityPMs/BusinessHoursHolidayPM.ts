//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a logitude.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

import { BusinessHourPM } from './BusinessHourPM';

import { ServiceHelper } from '../../Infrastructure/Utilities/ServiceHelper';
import { ServiceLocator } from '../../Infrastructure/Locators/ServiceLocator';
import { Output, EventEmitter } from '@angular/core';
import { PropertyChangedArgs } from '../../Infrastructure/EventEmitterArgs/PropertyChangedArgs';
import { CustomFieldClass } from '../../Infrastructure/DataContracts/CustomFieldClass';

export class BusinessHoursHolidayPM {
	private id: string;
	public get Id() {
		return this.id;
	}
	public set Id(newValue: string) {
		if (this.id != newValue) {
			this.id = newValue;
			this.MarkAsDirty('Id');
		}
	}

	private tenant: number;
	public get Tenant() {
		return this.tenant;
	}
	public set Tenant(newValue: number) {
		if (this.tenant != newValue) {
			this.tenant = newValue;
			this.MarkAsDirty('Tenant');
		}
	}

	private day: number;
	public get Day() {
		return this.day;
	}
	public set Day(newValue: number) {
		if (this.day != newValue) {
			this.day = newValue;
			this.MarkAsDirty('Day');
		}
	}

	private month: number;
	public get Month() {
		return this.month;
	}
	public set Month(newValue: number) {
		if (this.month != newValue) {
			this.month = newValue;
			this.MarkAsDirty('Month');
		}
	}

	private year: number;
	public get Year() {
		return this.year;
	}
	public set Year(newValue: number) {
		if (this.year != newValue) {
			this.year = newValue;
			this.MarkAsDirty('Year');
		}
	}

	private holidayName: string;
	public get HolidayName() {
		return this.holidayName;
	}
	public set HolidayName(newValue: string) {
		if (this.holidayName != newValue) {
			this.holidayName = newValue;
			this.MarkAsDirty('HolidayName');
		}
	}

	private isRecurring: boolean;
	public get IsRecurring() {
		return this.isRecurring;
	}
	public set IsRecurring(newValue: boolean) {
		if (this.isRecurring != newValue) {
			this.isRecurring = newValue;
			this.MarkAsDirty('IsRecurring');
		}
	}

	private inactive: boolean;
	public get Inactive() {
		return this.inactive;
	}
	public set Inactive(newValue: boolean) {
		if (this.inactive != newValue) {
			this.inactive = newValue;
			this.MarkAsDirty('Inactive');
		}
	}

	private createDate: Date;
	public get CreateDate() {
		return this.createDate;
	}
	public set CreateDate(newValue: Date) {
		if (this.createDate != newValue) {
			this.createDate = newValue;
			this.MarkAsDirty('CreateDate');
		}
	}

	private updateDate: Date;
	public get UpdateDate() {
		return this.updateDate;
	}
	public set UpdateDate(newValue: Date) {
		if (this.updateDate != newValue) {
			this.updateDate = newValue;
			this.MarkAsDirty('UpdateDate');
		}
	}

	private createdByUserId: string;
	public get CreatedByUserId() {
		return this.createdByUserId;
	}
	public set CreatedByUserId(newValue: string) {
		if (this.createdByUserId != newValue) {
			this.createdByUserId = newValue;
			this.MarkAsDirty('CreatedByUserId');
		}
	}

	private updatedByUserId: string;
	public get UpdatedByUserId() {
		return this.updatedByUserId;
	}
	public set UpdatedByUserId(newValue: string) {
		if (this.updatedByUserId != newValue) {
			this.updatedByUserId = newValue;
			this.MarkAsDirty('UpdatedByUserId');
		}
	}

	private businessHourId: string;
	public get BusinessHourId() {
		return this.businessHourId;
	}
	public set BusinessHourId(newValue: string) {
		if (this.businessHourId != newValue) {
			this.businessHourId = newValue;
			this.MarkAsDirty('BusinessHourId');
		}
	}

	private changeSetOp: string;
	public get ChangeSetOp() {
		return this.changeSetOp;
	}
	public set ChangeSetOp(newValue: string) {
		if (this.changeSetOp != newValue) {
			this.changeSetOp = newValue;
			this.MarkAsDirty('ChangeSetOp');
		}
	}

	private businessHour: any;
	public get BusinessHour() {
		return this.businessHour;
	}
	public set BusinessHour(newValue: any) {
		if (this.businessHour != newValue) {
			this.businessHour = newValue;
			this.MarkAsDirty('BusinessHour');
		}
	}

	public OldEntityPM: BusinessHoursHolidayPM;

	private entityParentPM: any;
	public get EntityParentPM() {
		return this.entityParentPM;
	}
	public set EntityParentPM(newValue: any) {
		this.entityParentPM = newValue;
	}

	public UniqueKey: string;

	public IsDirty: boolean;
	public DisableMarkAsDirty: boolean = false;
	MarkAsDirty(propertyName: string = null) {
		if (!this.DisableMarkAsDirty) {
			this.IsDirty = true;
			if (this.EntityParentPM) {
				this.EntityParentPM.MarkAsDirty();
			}
			if (propertyName != null) {
				ServiceLocator.RulesValidator.ApplyEntityChangedRules(propertyName, this, 'BusinessHoursHoliday');
			}
		}
	}
	private MyClone: BusinessHoursHolidayPM;

	public CloneMe() {
		ServiceHelper.CloneEntityPM(this);
	}

	public RejectChanges() {
		ServiceHelper.RejectEntityPMChanges(this);
	}
}
